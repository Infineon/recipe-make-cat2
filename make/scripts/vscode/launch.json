{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    //
    // NOTE for JLink users:
    //
    //    Please create the following setting in your VSCode User Settings or in
    //    your global PATH.  Cortex-Debug needs to find the specific gdb-server
    //    you want to use.
    //
    //       Windows     : "cortex-debug.JLinkGDBServerPath": "<JLinkInstallDir>/JLinkGDBServerCL"
    //       Linux / Mac : "cortex-debug.JLinkGDBServerPath": "<JLinkInstallDir>/JLinkGDBServer"
    //
    //    User settings are located in:
    //
    //       Windows : %APPDATA%/Code/User/settings.json
    //       Mac     : $HOME/Library/Application Support/Code/User/settings.json
    //       Linux   : $HOME/.config/Code/User/settings.json
    //
    //    You can use the VSCode Settings UI to edit the files mentioned above.
    //
    //    For the JLink configurations in this file, the "device" name comes from
    //    the list found here:
    //       https://www.segger.com/downloads/supported-devices.php
    //
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Launch PSoC4 CM0 (KitProg3_MiniProg4)",
            "type": "cortex-debug",
            "request": "launch",
            "cwd": "${workspaceRoot}",
            "executable": "&&CY_ELF_FILE&&",
            "servertype": "openocd",
            "searchDir": [
                "${workspaceRoot}",
                "${config:modustoolbox.toolsPath}/&&CY_OPENOCD_SCRIPTS_DIR&&/"
            ],
            "configFiles": [
                "openocd.tcl"
            ],
            "openOCDPreConfigLaunchCommands": [
                "set PSOC4_USE_ACQUIRE &&CY_XRES_AVAILABLE&&"
            ],
            "overrideLaunchCommands": [
                "set mem inaccessible-by-default off",
                "-enable-pretty-printing",
                "monitor reset init",
                // Comment this next line out if you don't want to reload program
                "monitor program {&&CY_HEX_FILE&&}",
                "monitor reset run",
                "monitor sleep 200",
                "monitor psoc4 reset_halt"
            ],
            "postStartSessionCommands": [       // Needed if runToMain is false
                // Following two commands are needed to get gdb and openocd and HW all in sync.
                // Or, execution context (PC, stack, registers, etc.) look like they are from before reset.
                // The stepi, is a pretend instruction that does not actually do a stepi, but MUST be done
                // Its a documented workaround in openocd. Do a 'monitor help' to see more info
                //
                // An alternative command to use is "continue" instead of the following two
                "monitor gdb_sync",
                "stepi"
            ],
            "overrideRestartCommands": [
                "monitor reset init",
                "monitor reset run",
                "monitor sleep 200",
                "monitor psoc4 reset_halt"
            ],
            "postRestartSessionCommands": [
                "monitor gdb_sync",
                "stepi"
            ],
            // svdFile is optional, it can be very large.
            "svdFile": "&&CY_SVD_FILE_NAME&&",
            "breakAfterReset": true,
            "runToMain": true,          // if true, program will halt at main. Not used for a restart
            "preLaunchTask": "Build: Build [&&CY_CONFIG&&]",    // Set this to run a task from tasks.json
                                                        // before starting a debug session
            "showDevDebugOutput": false // When set to true, displays output of GDB.
                                        // This is helpful when something is not working right
        },
        // When using 'attach', make sure your program is running on the board and that your
        // executable matches the image in the chip exactly, or else strange things can happen
        // with breakpoints, variables, etc.
        {
            "name": "Attach PSoC4 CM0 (KitProg3_MiniProg4)",
            "type": "cortex-debug",
            "request": "attach",
            "cwd": "${workspaceRoot}",
            "executable": "&&CY_ELF_FILE&&",
            "servertype": "&&CY_ATTACH_SERVER_TYPE&&",
            "searchDir": [
                "${workspaceRoot}",
                "${config:modustoolbox.toolsPath}/&&CY_OPENOCD_SCRIPTS_DIR&&/"
            ],
            "openOCDPreConfigLaunchCommands": [
                "set PSOC4_USE_ACQUIRE 0"
            ],
            "configFiles": [
                "openocd.tcl"
            ],
            "overrideAttachCommands": [
                "set mem inaccessible-by-default off",
                "-enable-pretty-printing",
                "monitor halt"
            ],
            "overrideRestartCommands": [
                "monitor reset init",
                "monitor reset run",
                "monitor sleep 200",
                "monitor psoc4 reset_halt"
            ],
            "postRestartSessionCommands": [
                "monitor gdb_sync",
                "stepi"
            ],
            // svdFile is optional, it can be very large.
            "svdFile": "&&CY_SVD_FILE_NAME&&",
            "breakAfterReset": true,
            "showDevDebugOutput": false // When set to true, displays output of GDB.
                                        // This is helpful when something is not working right
        },
        {
            "name": "Erase (KitProg3_MiniProg4)",
            "type": "cortex-debug",
            "request": "launch",
            "cwd": "${workspaceRoot}",
            "executable": "&&CY_HEX_FILE&&",
            "servertype": "openocd",
            "searchDir": [
                "${workspaceRoot}",
                "${config:modustoolbox.toolsPath}/&&CY_OPENOCD_SCRIPTS_DIR&&/"
            ],
            "configFiles": [
                "openocd.tcl"
            ],
            "openOCDPreConfigLaunchCommands": [
                "set PSOC4_USE_ACQUIRE &&CY_XRES_AVAILABLE&&"
            ],
            "overrideLaunchCommands": [
                "monitor reset init",
                "monitor flash erase_sector 0 0 last",
                "quit"
            ],
            "showDevDebugOutput": false // When set to true, displays output of GDB.
                                        // This is helpful when something is not working right
        },
        {
            "name": "Program (KitProg3_MiniProg4)",
            "type": "cortex-debug",
            "request": "launch",
            "cwd": "${workspaceRoot}",
            "executable": "&&CY_HEX_FILE&&",
            "servertype": "openocd",
            "searchDir": [
                "${workspaceRoot}",
                "${config:modustoolbox.toolsPath}/&&CY_OPENOCD_SCRIPTS_DIR&&/"
            ],
            "configFiles": [
                "openocd.tcl"
            ],
            "openOCDPreConfigLaunchCommands": [
                "set PSOC4_USE_ACQUIRE &&CY_XRES_AVAILABLE&&"
            ],
            "overrideLaunchCommands": [
                "monitor program {&&CY_HEX_FILE&&}",
                "monitor &&CY_RESET_CONFIG&&",
                "monitor reset run",
                "monitor psoc4.dap dpreg 0x04 0x00",
                "quit"
            ],
            "preLaunchTask": "Build: Build [&&CY_CONFIG&&]",    // Set this to run a task from tasks.json
                                                        // before device programming
            "showDevDebugOutput": false // When set to true, displays output of GDB.
                                        // This is helpful when something is not working right
        },
        {
            "name": "Launch PSoC4 CM0 (JLink)",
            "type": "cortex-debug",
            "request": "launch",
            "cwd": "${workspaceRoot}",
            "executable": "&&CY_ELF_FILE&&",
            "servertype": "jlink",
            "device": "&&DEVICE&&",
            "preLaunchCommands": [
                // Program via the hex file to get complete coverage
                "exec-file &&CY_HEX_FILE&&"
            ],
            "demangle": true,
            // svdFile is optional, it can be very large.
            "svdFile": "&&CY_SVD_FILE_NAME&&",
            "breakAfterReset": true,
            "runToMain": true,          // if true, program will halt at main. Not used for a restart
            "preLaunchTask": "Build: Build [&&CY_CONFIG&&]", // Set this to run a task from tasks.json before
                                                     // starting a debug session
            "showDevDebugOutput": false // When set to true, displays output of GDB.
                                        // This is helpful when something is not working right
        },
        // When using 'attach', make sure your program is running on the board and that your
        // executable matches the image in the chip exactly, or else strange things can happen
        // with breakpoints, variables, etc.
        {
            "name": "Attach PSoC4 CM0 (JLink)",
            "type": "cortex-debug",
            "request": "attach",
            "cwd": "${workspaceRoot}",
            "executable": "&&CY_ELF_FILE&&",
            "servertype": "jlink",
            "device": "&&CY_DEVICE_ATTACH&&",
            "demangle": true,
            // svdFile is optional, it can be very large.
            "svdFile": "&&CY_SVD_FILE_NAME&&",
            "breakAfterReset": true,
            "showDevDebugOutput": false // When set to true, displays output of GDB.
                                        // This is helpful when something is not working right
        },
        {
            "name": "Erase (JLink)",
            "type": "cortex-debug",
            "request": "launch",
            "cwd": "${workspaceRoot}",
            // executable not needed but need some valid file to get the session to start
            "executable": "&&CY_HEX_FILE&&",
            "servertype": "jlink",
            "device": "&&DEVICE&&",
            "overrideLaunchCommands": [
                "monitor reset 2",      // Reset via the reset pin
                "monitor flash erase",
                "monitor reset 0",      // Reset both core and the peripherals
                "quit"
            ],
            "showDevDebugOutput": false // When set to true, displays output of GDB.
                                        // This is helpful when something is not working right
        },
        {
            "name": "Program (JLink)",
            "type": "cortex-debug",
            "request": "launch",
            "cwd": "${workspaceRoot}",
            // Program via the hex file to get complete coverage, no need for symbols
            "executable": "&&CY_HEX_FILE&&",
            "servertype": "jlink",
            "device": "&&DEVICE&&",
            "overrideLaunchCommands": [
                "monitor reset 2",      // Reset via the reset pin
                "-target-download",
                "monitor reset 0",      // Reset both core and the peripherals
                "monitor go",
                "quit"
            ],
            "preLaunchTask": "Build: Build [&&CY_CONFIG&&]",    // Set this to run a task from tasks.json
                                                        // before device programming
            "showDevDebugOutput": false // When set to true, displays output of GDB.
                                        // This is helpful when something is not working right
        }
    ]
}
